@using hospitalUtilities 

@model PagedREsult<hospitalVm.RoomVm>
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@addTagHelper *,Cloudscribe.Web.Pagination

@{
    ViewData["Title"] = "Index";
    Layout = "_Layout";
}

<a asp-controller="Room" onclick="return showADDConfirmation()" asp-action="Save">
    <i class="fas fa-plus-circle"></i> Add New Room
</a>

@*<table class="table">
    <thead>
        <tr>
            <th>ID</th>
            <th>Name</th>
            <th>Stuts</th>
            <th>hospitailname</th>
            <th>Type</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody id="contactTableBody">
        @foreach (var hospital in Model.Data)
        {
            <tr>
                <td>@hospital.id</td>
                <td>@hospital.RoomName</td>
                <td>@hospital.Stuts</td>
                <td>@hospital.hospitalname</td>
                <td>@hospital.type</td>
                <td>
                    <a asp-controller="Room" asp-action="Details" asp-route-id="@hospital.id">
                        <i class="fas fa-info-circle" title="Details"></i>
                    </a>
                    <a asp-controller="Room" asp-action="Save" asp-route-id="@hospital.id">
                        <i class="fas fa-edit" title="Edit"></i>
                    </a>
                    <a asp-controller="Room" asp-action="Delete" asp-route-id="@hospital.id">
                        <i class="fas fa-trash-alt" title="Delete"></i>
                    </a>
                </td>
            </tr>
        }
    </tbody>
</table>

<nav aria-label="Page navigation example">
    <ul class="pagination">
        @for (int i = 1; i <= Model.pageSize; i++)
        {
            <li class="page-item @(i == Model.pageNumber ? "active" : "")">
                <a class="page-link" href="/Admin/Contact/Index?pagnumber=@i">@i</a>
            </li>
        }
    </ul>
</nav>
*@


<!-- ... Your existing code ... -->
<table class="table">
    <thead>
        <tr>
            <th>ID</th>
            <th>Name</th>
            <th>Stuts</th>
            <th>hospitailname</th>
            <th>Type</th>
            <th>Actions</th>
        </tr>
    </thead>
<tbody id="contactTableBody">
    @foreach (var hospital in Model.Data)
    {
        <tr>
            <td>@hospital.id</td>
            <td>@hospital.RoomName</td>
            <td>@hospital.Stuts</td>
            <td>@hospital.hospitalname</td>
            <td>@hospital.type</td>
                <td>
                    <!-- Initial action button -->
                    <a 
@*                        asp-controller="Room" asp-action="Details" asp-route-id="@hospital.id"
*@                       onclick="executeInitialAction('@Url.Action("Details", "Room", new { id = hospital.id })')">
                        <i class="fas fa-info-circle" title="Details"></i>
                    </a>
                    <!-- Subsequent action button -->
                    <a
@*                        asp-controller="Room" asp-action="Save" asp-route-id="@hospital.id"
*@                       onclick="return showEditConfirmation('@Url.Action("Save", "Room", new { id = hospital.id })')">
                        <i class="fas fa-edit" title="Edit"></i>
                    </a> 
                    <a
@*                        asp-controller="Room" asp-action="Save" asp-route-id="@hospital.id"
                   *@ onclick="return DeletEditConfirmation('@Url.Action("Delete", "Room", new
                   { id = hospital.id })')">
                        <i class="fas fa-trash-alt" title="Delete"></i>
                    </a>
                    <!-- ... -->
                </td>

        </tr>
    }
</tbody>
</table>
<nav aria-label="Page navigation example">
    <ul class="pagination">
        @for (int i = 1; i <= Model.pageSize; i++)
        {
            <li class="page-item @(i == Model.pageNumber ? "active" : "")">
                <a class="page-link" href="/Admin/Contact/Index?pagnumber=@i">@i</a>
            </li>
        }
    </ul>
</nav>

<!-- ... Your existing code ... -->
<script>
    async function executeInitialAction(url) {
        try {
            // Execute the initial action using Ajax
            const response = await fetch(url, { method: 'POST' });

            // Check if the response is successful or handle errors
            if (response.ok) {
                // Perform the subsequent action after the initial action
                showEditConfirmation(url);
            } else {
                console.error('Initial action failed');
            }
        } catch (error) {
            console.error('Error:', error);
        }
    }

    async function showEditConfirmation(url) {
        const confirmed = await showConfirmation('Edit', 'Are you sure you want to edit?');
        if (confirmed) {
            // Perform the subsequent action
            window.location.href = url;
        }
    } async function DeletEditConfirmation(url) {
        const confirmed = await showConfirmation('Delet', 'Are you sure you want to Delet?');
        if (confirmed) {
            // Perform the subsequent action
            window.location.href = url;
        }
    }

    async function showConfirmation(action, message) {
        const result = await Swal.fire({
            title: `Confirm ${action}`,
            text: message,
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: `Yes, ${action} it!`,
            cancelButtonText: 'No, cancel',
        });
        return result.isConfirmed;
    }
</script>






