@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@using hospitalUtilities
@model PagedREsult<hospitalVm.RoomVm>
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@addTagHelper *, Cloudscribe.Web.Pagination

@{
    ViewData["Title"] = "Index";
    Layout = "_Layout";
}

<a asp-controller="Room" onclick="return showADDConfirmation()" asp-action="Save" class="btn btn-primary">
    <i class="fas fa-plus-circle"></i> Add New Room
</a>

<table class="table table-bordered table-hover table-success
            table-bordered">
    <thead>
        <tr>
            <th>ID</th>
            <th>Name</th>
            <th>Stuts</th>
            <th>Hospitail Name</th>
            <th>Type</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody id="contactTableBody">
        @foreach (var hospital in Model.Data)
        {
            <tr>
                <td>@hospital.id</td>
                <td>@hospital.RoomName</td>
                <td>@hospital.Stuts</td>
                <td>@hospital.hospitalname</td>
                <td>@hospital.type</td>
                <td>
                    <a asp-controller="Room" asp-action="Details" asp-route-id="@hospital.id" class="btn btn-info">
                        <i class="fas fa-info-circle"></i> Details
                    </a>
                    <a asp-controller="Room" asp-action="Save" asp-route-id="@hospital.id" class="btn btn-warning">
                        <i class="fas fa-edit"></i> Edit
                    </a>
                    <a asp-controller="Room" asp-action="Delete" asp-route-id="@hospital.id" class="btn btn-danger">
                        <i class="fas fa-trash-alt"></i> Delete
                    </a>
                </td>
            </tr>
        }
    </tbody>
</table>

<nav aria-label="Page navigation example">
    <ul class="pagination">
        @for (int i = 1; i <= Model.pageSize; i++)
        {
            <li class="page-item @(i == Model.pageNumber ? "active" : "")">
                <a class="page-link" href="/Admin/Contact/Index?pagnumber=@i">@i</a>
            </li>
        }
    </ul>
</nav>


<script>
    async function executeInitialAction(url) {
        try {
            const response = await fetch(url, { method: 'POST' });

            if (response.ok) {
                showEditConfirmation(url);
            } else {
                console.error('Initial action failed');
            }
        } catch (error) {
            console.error('Error:', error);
        }
    }

    async function showEditConfirmation(url) {
        const confirmed = await showConfirmation('Edit', 'Are you sure you want to edit?');
        if (confirmed) {
            window.location.href = url;
        }
    }

    async function DeletEditConfirmation(url) {
        const confirmed = await showConfirmation('Delete', 'Are you sure you want to delete?');
        if (confirmed) {
            window.location.href = url;
        }
    }

    async function showConfirmation(action, message) {
        const result = await Swal.fire({
            title: `Confirm ${action}`,
            text: message,
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: `Yes, ${action} it!`,
            cancelButtonText: 'No, cancel',
        });
        return result.isConfirmed;
    }
</script>
