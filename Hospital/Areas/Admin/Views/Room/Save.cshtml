@{
    ViewData["Title"] = "Save";
    Layout = "_Layout";
}
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@addTagHelper *, Cloudscribe.Web.Pagination

@model hospitalVm.RoomVm

<style>
    /* Custom CSS styles */
    .container {
        text-align: center;
    }

    h1 {
        margin-bottom: 20px;
    }

    .btn-secondary {
        margin-top: 10px;
    }

    body {
        background-image: url('/Images/hospital11.jpg');
        background-size: cover;
        background-repeat: no-repeat;
    }

    /* Glass-like style for form elements */
    .glass-container {
        background-color: rgba(255, 255, 255, 0.2);
        border: 1px solid rgba(255, 255, 255, 0.2);
        border-radius: 20px;
        padding: 5px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);
        color: black;
    }

    .glass-input {
        background-color: rgba(255, 255, 255, 0.2);
        border: none;
        border-radius: 5px;
        padding: 5px;
        box-shadow: 0 0 5px rgba(0, 0, 0, 0.3);
    }

    .glass-select {
        background-color: rgba(255, 255, 255, 0.2);
        border: none;
        border-radius: 5px;
        padding: 5px;
        box-shadow: 0 0 5px rgba(0, 0, 0, 0.3);
    }

    /* Style for the button group */
    .button-group {
        display: flex;
        justify-content: space-between;
        margin-top: 20px;
    }

        .button-group .btn {
            margin: 0;
        }

    /* Style for form-row divisions */
    .form-row {
        display: flex;
        justify-content: space-between;
        margin: 10px 0;
    }
</style>

<div class="container mt-5 glass-container col-md-7">
    <div class="row justify-content-center">
        <div class="col-md-12">
            <h1>Edit Room</h1>

            <form asp-action="Save" method="post" id="saveform">
                <input type="hidden" asp-for="id" />

                <div class="form-group">
                    <label asp-for="RoomName">Room Name:</label>
                    <input asp-for="RoomName" class="form-control glass-input" required />
                </div>

                <div class="form-group">
                    <label asp-for="type">Type:</label>
                    <input asp-for="type" class="form-control glass-input" />
                </div>

                <div class="form-group">
                    <label asp-for="Stuts">Status:</label>
                    <input asp-for="Stuts" class="form-control glass-input" />
                </div>

                <div class="form-group glass-select col-8">
                    <label asp-for="hospitalid">Hospital</label>
                    <select asp-for="hospitalid" class="form-control glass-select" asp-items="@ViewBag.HospitalsId">
                        <option value="">Select Hospital</option>
                        @foreach (var item in ViewBag.HospitalsId)
                        {
                            <option value="@item.Value" selected>@item.Text</option>
                        }
                    </select>
                </div>

                <div class="button-group">
                    <button type="submit" id="savedata" class="btn btn-info">
                        Save
                    </button>
                    <a asp-area="Admin" asp-controller="Room" asp-action="Index" class="btn btn-secondary mt-2">
                        <i class="fas fa-chevron-circle-left"></i> Back to Index
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        var saveForm = document.getElementById("saveform");
        var saveButton = document.getElementById("savedata");

        saveForm.addEventListener("submit", function (event) {
            event.preventDefault();

            Swal.fire({
                title: "Are you sure?",
                text: "You are about to update the room's information.",
                icon: "warning",
                showCancelButton: true,
                confirmButtonText: "Yes, update it!",
                cancelButtonText: "No, cancel",
            }).then((result) => {
                if (result.isConfirmed) {
                    // You can also add additional form validation here
                    saveForm.submit();
                }
            });
        });

        // After form submission, show a success message if desired
        var urlParams = new URLSearchParams(window.location.search);
        var successParam = urlParams.get("success");
        if (successParam === "true") {
            Swal.fire({
                title: "Success!",
                text: "Room's information has been updated.",
                icon: "success"
            });
        }
    });
</script>
