@{
    ViewData["Title"] = "All Patient Reports";
    Layout = "_Layout";
}
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@using hospitalUtilities
@model PagedList.IPagedList<hospitalVm.patientreportVm>

<style>
    /* Style for rows marked as not confirmed */
    .not-confirmed-row {
        background-color: red; /* You can customize this color */
        color: white; /* You can customize the text color */
    }
</style>
<partial name="_AlertMessage" />
<link href="~/css/contactindex.css" rel="stylesheet" />

<form id="search-form" method="get">
    <input type="text" name="search" value="@ViewBag.Search" placeholder="Search..." id="search-input" class="form-control">
</form>

<div class="container mt-4">
    <div class="table-responsive">
        <table class="table table-bordered table-hover table-success table-bordered">
            <thead class="thead-dark">
                <tr>
                    <th>dignoses</th>
                    <th>patientName</th>
                    <th>doctorname</th>
                    <th>Reportdate</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var doctor in Model)
                {
                    <tr class="row-style">
                        <!-- Added a class for filtering -->
                        <td>@doctor.dignouses</td>
                        <td>@doctor.patientName</td>
                        <td>@doctor.doctorname</td>
                        <td>@doctor.Reportdate</td>
                        <td>
                            @using System.Security.Claims

                            @{
                                var userRole = User.FindFirst(ClaimTypes.Role)?.Value;
                            }

                            <div class="row">
                                <div class="col-md-6">
                                  @*   @if (userRole == "User" 
                                    )
                                    { *@
                                         
                            <a asp-controller="PatientReport" asp-action="Details" asp-route-id="@doctor.id" class="btn btn-sm btn-info">Details</a>
                   
                                  @*   }
                                    else 
 *@
@*                                     {
 *@                                        <a asp-controller="PatientReport" asp - action="Save" asp-route-id="@doctor.id" asp-route-DoctorAppointmentVIsitid="@doctor.DoctorAppointmentVIsitid" class="btn btn-sm btn-info">Update</a>
                                                    <a asp-controller="PatientReport" asp-action="Delete" asp-route-id="@doctor.id" class="btn btn-sm btn-info">Delete</a>

@*                                     }
 *@                                </div>
                               

                            </div>
                        </td>
                        
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
<nav aria-label="Page navigation example">
    <ul class="pagination">
        <li class="page-item @(Model.PageNumber == 1 ? "disabled" : "")">
            <a class="page-link" asp-action="GetAllPatientReportsbyPatientId" asp-route-page="1" aria-label="Previous">
                <span aria-hidden="true">&laquo;</span>
            </a>
        </li>
        @for (int i = 1; i <= Model.PageCount; i++)
        {
            <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                <a class "page-link" asp-action="GetAllPatientReportsbyPatientId" asp-route-page="@i">@i</a>
            </li>
        }
        <li class="page-item @(Model.PageNumber == Model.PageCount ? "disabled" : "")">
            <a class="page-link" asp-action="GetAllPatientReportsbyPatientId" asp-route-page="@Model.PageCount" aria-label="Next">
                <span aria-hidden="true">&raquo;</span>
            </a>
        </li>
    </ul>
</nav>
@section Scripts {
    <script>
        // Update table visibility based on search input
        function updateTableVisibility(searchTerm) {
            const rows = document.querySelectorAll(".row-style");
            rows.forEach(row => {
                const doctorNameCell = row.querySelector("td:nth-child(2)"); // Adjust this selector as needed
                if (doctorNameCell.textContent.toLowerCase().includes(searchTerm.toLowerCase())) {
                    row.style.display = "table-row";
                } else {
                    row.style.display = "none";
                }
            });
        }

        const searchInput = document.getElementById("search-input");
        searchInput.addEventListener("input", function () {
            updateTableVisibility(this.value);
        });
    </script>
}
